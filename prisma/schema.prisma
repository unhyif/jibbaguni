generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("NEXT_PUBLIC_SUPABASE_STRING")
  directUrl = env("NEXT_PUBLIC_SUPABASE_DIRECT_STRING")
}

model userProfile {
  id        String     @id @db.Uuid
  visitLogs visitLog[]
}

model visitLog {
  id              Int                  @id @default(autoincrement())
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt @default(now())
  userProfile     userProfile          @relation(fields: [userProfileId], references: [id], onDelete: Cascade)
  userProfileId   String               @db.Uuid
  link            String?
  address         Json?
  realEstate      Json?
  transactionType transactionTypeEnum?
  price           Int?
  monthly         Int?
  maintenanceCost Int?
  supplyArea      Float?
  exclusiveArea   Float?
  direction       directionEnum?
  floor           Int?
  hasElevator     Boolean?
  canPark         Boolean?
  images          visitLogImage[]
  furnitures      furniture[]          @relation("furnitureTovisitLog")
}

model visitLogImage {
  id         Int      @id @default(autoincrement())
  url        String
  visitLogId Int
  visitLog   visitLog @relation(fields: [visitLogId], references: [id])
}

model furniture {
  id        Int           @id @default(autoincrement())
  code      furnitureEnum
  visitLogs visitLog[]    @relation("furnitureTovisitLog")
}

enum transactionTypeEnum {
  MONTHLY_RENT
  JEONSE
  SALE
}

enum directionEnum {
  EAST
  WEST
  SOUTH
  NORTH
}

enum furnitureEnum {
  AIR_CONDITIONER
  BED
  CLOSET
  DESK
  FRIDGE
  INDUCTION
  MICROWAVE
  SHOE_CLOSET
  SINK
  STOVE
  TV
  WASHING_MACHINE
}
